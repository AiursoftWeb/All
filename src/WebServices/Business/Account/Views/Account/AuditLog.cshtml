@using Aiursoft.Gateway.SDK.Models.API
@model AuditLogViewModel
@{
    ViewData["Title"] = "Audit Log";
}
<div class="container-fluid">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-controller="Account" asp-action="Index">@Localizer["Management Center"]</a>
        </li>
        <li class="breadcrumb-item active">
            @ViewData["Title"]
        </li>
    </ol>
    @if (Model.JustHaveUpdated)
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">@Localizer["x"]</span>
            </button>
            <strong>@Localizer["Well done!"]</strong> @Localizer["You have successfully updated your profile."]
        </div>
    }
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">@Localizer["x"]</span>
            </button>
            <strong>@Localizer["Invalid Input!"]</strong>
            <div asp-validation-summary="All"></div>
        </div>
    }
    <div class="col-md-8 pl-0">
        <div class="card mb-3">
            <div class="card-header">
                <i class="fa fa-lock"></i>
                @Localizer["Audit log"]
            </div>
            <div class="card-body">
                <p>
                    You have @Model.Logs.TotalCount log in attempt@(Model.Logs.TotalCount > 1 ? "s" : string.Empty) to your account.
                </p>
                <p class="text-muted">
                    @Localizer["The audit log feature is for your account security. We respect your privacy and will never track your login activity by human or AI. Only the apps you granted to view the log can get these log."]
                </p>
            </div>
            <ul class="list-group list-group-flush">
                @foreach (var log in Model.Logs.Items)
                {
                    var app = Model.Apps.SingleOrDefault(t => t.AppId == log.AppId);
                    if (app == null)
                    {
                        continue;
                    }
                    <li class="list-group-item">
                        <div class="row">
                            <div class="col-10 d-flex">
                                <img class="rounded mr-3" src="@await ProbeLocator.GetProbeOpenAddressAsync(app.IconPath)?w=128&square=true" style="width:40px; height:40px;"/>
                                <div class="d-block">
                                    <h5>@app.AppName</h5>
                                    <p>
                                        Attempt to log in to @app.AppName
                                        <lable class="text-muted" data-utc-time="@log.HappenTime.ToHtmlDateTime()"></lable>
                                        <br>
                                        Result:
                                        @if (log.Success)
                                        {
                                            <lable class="text-muted">
                                                <span class="badge badge-primary">@Localizer["Success"]</span>
                                            </lable>
                                        }
                                        else
                                        {
                                            <lable class="text-muted">
                                                <span class="badge badge-danger">@Localizer["Failed"]</span>
                                            </lable>
                                        }
                                        IP address:
                                        <lable class="text-muted">@log.IPAddress</lable>
                                    </p>
                                </div>
                            </div>
                            <div class="col-2">
                            </div>
                        </div>
                    </li>
                }
            </ul>
            <div class="pl-3">
                @Html.PagedListPager(new StaticPagedList<AuditLog>(Model.Logs.Items, Model.Logs.CurrentPage, Model.Logs.CurrentPageSize, Model.Logs.TotalCount), page => Url.Action("AuditLog", new { page }))
            </div>
        </div>
    </div>
</div>